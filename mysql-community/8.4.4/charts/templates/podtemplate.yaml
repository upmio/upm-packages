apiVersion: v1
kind: PodTemplate
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    upm.io/owner: upm
    type: mysql
    edition: community
    version: {{ .Chart.AppVersion | quote }}
template:
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: mysql
    labels:
      type: mysql
      edition: community
      version: {{ .Chart.AppVersion | quote }}
  spec:
    tolerations:
      - key: "key"
        operator: "Equal"
        value: "value"
        effect: "NoSchedule"
    dnsPolicy: ClusterFirst
    restartPolicy: Always
    terminationGracePeriodSeconds: 30
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: OnRootMismatch
    initContainers:
      - name: init-container
        image: {{ include "mysql.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
        command:
          - "bash"
          - "-c"
          - "service-ctl.sh initialize"
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.name"
          - name: DATA_MOUNT
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['unit-operator/storage.volume.data.mountPath']"
          - name: LOG_MOUNT
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['unit-operator/storage.volume.log.mountPath']"
          - name: SECRET_MOUNT
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['unit-operator/extraVolume.volume.unit-secret.volumeMountPath']"
          - name: DATA_DIR
            value: "$(DATA_MOUNT)/data"
          - name: CONF_DIR
            value: "$(DATA_MOUNT)/conf"
          - name: TMP_DIR
            value: "$(DATA_MOUNT)/tmp"
          - name: BIN_LOG_DIR
            value: "$(DATA_MOUNT)/binlog"
          - name: RELAY_LOG_DIR
            value: "$(DATA_MOUNT)/relaylog"
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQLX_PORT
            value: "33060"
          - name: AES_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: AES_SECRET_KEY
                name: aes-secret-key
          - name: ARCH_MODE
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.labels['upm.api/service.arch.mode']"
      - name: sysctl
        image: {{ include "mysql.image" . }}
        command:
          - "bash"
          - "-c"
          - "ulimit -n 65535"
        securityContext:
          privileged: true
          runAsUser: 0
    containers:
      - name: mysql
        image: {{ include "mysql.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
        ports:
          - containerPort: 3306
            name: mysql
          - containerPort: 33060
            name: mysqlx
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.name"
          - name: DATA_MOUNT
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['unit-operator/storage.volume.data.mountPath']"
          - name: LOG_MOUNT
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['unit-operator/storage.volume.log.mountPath']"
          - name: SECRET_MOUNT
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['unit-operator/extraVolume.volume.unit-secret.volumeMountPath']"
          - name: DATA_DIR
            value: "$(DATA_MOUNT)/data"
          - name: CONF_DIR
            value: "$(DATA_MOUNT)/conf"
          - name: TMP_DIR
            value: "$(DATA_MOUNT)/tmp"
          - name: BIN_LOG_DIR
            value: "$(DATA_MOUNT)/binlog"
          - name: RELAY_LOG_DIR
            value: "$(DATA_MOUNT)/relaylog"
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQLX_PORT
            value: "33060"
          - name: AES_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: AES_SECRET_KEY
                name: aes-secret-key
        livenessProbe:
          exec:
            command:
              - "timeout"
              - "3"
              - "bash"
              - "-c"
              - "</dev/tcp/localhost/9001"
          failureThreshold: 3
          initialDelaySeconds: 12
          periodSeconds: 12
          timeoutSeconds: 4
          successThreshold: 1
        readinessProbe:
          exec:
            command:
              - "timeout"
              - "3"
              - "bash"
              - "-c"
              - "mysqladmin --defaults-file=${CONF_DIR}/.monitor.cnf status"
          failureThreshold: 3
          initialDelaySeconds: 12
          periodSeconds: 12
          timeoutSeconds: 4
          successThreshold: 1
        startupProbe:
          exec:
            command:
              - "timeout"
              - "3"
              - "bash"
              - "-c"
              - "</dev/tcp/localhost/9001"
          failureThreshold: 3
          initialDelaySeconds: 12
          periodSeconds: 12
          timeoutSeconds: 4
          successThreshold: 1
      - name: unit-agent
        image: {{ include "mysql.agent.image" . }}
        imagePullPolicy: {{ .Values.agent.image.pullPolicy | quote }}
        securityContext:
          runAsUser: 1001
          runAsGroup: 1001
          allowPrivilegeEscalation: false
        ports:
          - containerPort: 2214
            name: unit-agent
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.name"
          - name: UNIT_TYPE
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['kubectl.kubernetes.io/default-container']"
          - name: DATA_MOUNT
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['unit-operator/storage.volume.data.mountPath']"
          - name: LOG_MOUNT
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['unit-operator/storage.volume.log.mountPath']"
          - name: DATA_DIR
            value: "$(DATA_MOUNT)/data"
          - name: CONF_DIR
            value: "$(DATA_MOUNT)/conf"
          - name: TMP_DIR
            value: "$(DATA_MOUNT)/tmp"
          - name: BIN_LOG_DIR
            value: "$(DATA_MOUNT)/binlog"
          - name: RELAY_LOG_DIR
            value: "$(DATA_MOUNT)/relaylog"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.namespace"
          - name: CONFIG_PATH
            value: "$(DATA_MOUNT)/conf/mysql.cnf"
          - name: SERVICE_NAME
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.labels['unit-operator/unitset.name']"
          - name: UNIT_SN
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.labels['unit-operator/unit.sn']"
          - name: MYSQL_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: "mysql"
                resource: "limits.memory"
                divisor: "1Mi"
          - name: AES_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: AES_SECRET_KEY
                name: aes-secret-key
          - name: MGR_NAME_UUID
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.labels['upm.api/service-group.id']"
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQLX_PORT
            value: "33060"
          - name: ARCH_MODE
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.labels['upm.api/service.arch.mode']"
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
      - name: metrics
        image: {{ include "mysql.metrics.image" . }}
        imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
        securityContext:
          allowPrivilegeEscalation: false
        command:
          - "sh"
          - "-c"
          - |
            mysqld_exporter \
              --config.my-cnf=${CONF_DIR}/.monitor.cnf \
              --web.listen-address=:${METRICS_PORT} \
              --collect.auto_increment.columns \
              --collect.binlog_size \
              --collect.engine_innodb_status \
              --collect.info_schema.clientstats \
              --collect.info_schema.innodb_cmp \
              --collect.info_schema.innodb_cmpmem \
              --collect.info_schema.innodb_metrics \
              --collect.info_schema.innodb_tablespaces \
              --collect.info_schema.processlist \
              --collect.info_schema.tables \
              --collect.info_schema.tablestats \
              --collect.info_schema.userstats \
              --collect.perf_schema.eventsstatements \
              --collect.perf_schema.eventsstatementssum \
              --collect.perf_schema.eventswaits \
              --collect.perf_schema.memory_events \
              --collect.perf_schema.tablelocks \
              --collect.perf_schema.tableiowaits \
              --collect.slave_hosts
        ports:
          - containerPort: 9104
            name: metrics
        env:
          - name: METRICS_PORT
            value: "9104"
          - name: DATA_MOUNT
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.annotations['unit-operator/storage.volume.data.mountPath']"
          - name: CONF_DIR
            value: "$(DATA_MOUNT)/conf"
          - name: ARCH_MODE
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: "metadata.labels['upm.api/service.arch.mode']"
        {{- if .Values.metrics.resources }}
        resources: {{ toYaml .Values.metrics.resources | nindent 10 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          failureThreshold: 4
          periodSeconds: 12
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          failureThreshold: 4
          periodSeconds: 12
          timeoutSeconds: 3
